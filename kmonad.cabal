cabal-version: 1.12

name:           kmonad
version:        0.2.0
synopsis:       Advanced keyboard remapping utility
author:         David Janssen
maintainer:     janssen.dhj@gmail.com
license:        MIT
license-file:   LICENSE
build-type:     Simple

library
  ghc-options:
    -Wall
    -Wno-name-shadowing
    -Wno-unused-imports
  exposed-modules:
      KMonad.Types.Keyboard
      KMonad.Types.Keyboard.Keycode
      KMonad.Types.Keyboard.Event
      KMonad.Types.Time
      KMonad.Prelude
  --     KMonad
  --     KMonad.Api.App
  --     KMonad.Api.Encode
  --     KMonad.Api.EventTracker
  --     KMonad.Api.InputDispatch
  --     KMonad.Api.KeyIO
  --     KMonad.Api.KeyIO.Types
  --     KMonad.Api.LayerStack
  --     KMonad.Api.LockManager
  --     KMonad.Api.Sluice
  --     KMonad.Api.SymbolEncoder
  --     KMonad.CLI.Args
  --     KMonad.Core
  --     KMonad.Types.Config
  --     KMonad.Types.Event
  --     KMonad.Types.Keyboard
  --     KMonad.Types.KeyCode
  --     KMonad.Types.MapStack
  --     KMonad.Types.Matrix
  --     KMonad.Types.Parser
  --     KMonad.Types.Parser.Parsers.Alias
  --     KMonad.Types.Parser.Parsers.Button
  --     KMonad.Types.Parser.Parsers.Config
  --     KMonad.Types.Parser.Parsers.IO
  --     KMonad.Types.Parser.Parsers.KeyCode
  --     KMonad.Types.Parser.Parsers.KeySequence
  --     KMonad.Types.Parser.Parsers.Layer
  --     KMonad.Types.Parser.Parsers.Matrix
  --     KMonad.Types.Parser.Parsers.Source
  --     KMonad.Types.Parser.Parsers.SpecialSymbol
  --     KMonad.Types.Parser.Token
  --     KMonad.Types.Parser.Utility
  --     KMonad.Types.Pretty
  --     KMonad.Types.SpecialSymbol
  --     KMonad.Types.Switch
  --     KMonad.Types.Time
  --     KMonad.Types.Types
  --     KMonad.Domain.Button
  --     KMonad.Domain.Button.Button
  --     KMonad.Domain.Button.Buttons
  --     KMonad.Domain.Button.Buttons.After
  --     KMonad.Domain.Button.Buttons.Around
  --     KMonad.Domain.Button.Buttons.Block
  --     KMonad.Domain.Button.Buttons.Emit
  --     KMonad.Domain.Button.Buttons.EmitDeadKey
  --     KMonad.Domain.Button.Buttons.EmitSpecial
  --     KMonad.Domain.Button.Buttons.LayerAdd
  --     KMonad.Domain.Button.Buttons.LayerRem
  --     KMonad.Domain.Button.Buttons.LayerToggle
  --     KMonad.Domain.Button.Buttons.Lockers
  --     KMonad.Domain.Button.Buttons.Macro
  --     KMonad.Domain.Button.Buttons.MultiTap
  --     KMonad.Domain.Button.Buttons.TapHold
  --     KMonad.Domain.Button.Buttons.TapNext
  --     KMonad.Domain.Button.Encode
  --     KMonad.Domain.Effect
  --     KMonad.Domain.Effect.Effects
  --     KMonad.Domain.Effect.Effects.MonadButton
  --     KMonad.Domain.Effect.Effects.MonadEmit
  --     KMonad.Domain.Effect.Effects.MonadFork
  --     KMonad.Domain.Effect.Effects.MonadFuture
  --     KMonad.Domain.Effect.Effects.MonadHandler
  --     KMonad.Domain.Effect.Effects.MonadHold
  --     KMonad.Domain.Effect.Effects.MonadInject
  --     KMonad.Domain.Effect.Effects.MonadLock
  --     KMonad.Domain.Effect.Effects.MonadMaskInput
  --     KMonad.Domain.Effect.Effects.MonadNext
  --     KMonad.Domain.Effect.Effects.MonadNow
  --     KMonad.Domain.Effect.Effects.MonadRace
  --     KMonad.Domain.Effect.Effects.MonadScript
  --     KMonad.Domain.Effect.Effects.MonadStackManip
  --     KMonad.Domain.Effect.Effects.MonadSymbol
  --     KMonad.Domain.Effect.Effects.MonadVar
  --     KMonad.Domain.Effect.Effects.MonadWait
  --     KMonad.Domain.Loop
  -- if os(linux)
  --   exposed-modules:
  --     KMonad.Api.KeyIO.Linux.DeviceSource
  --     KMonad.Api.KeyIO.Linux.Types
  --     KMonad.Api.KeyIO.Linux.UinputSink
  -- if os(windows)
  --   exposed-modules:
  --     KMonad.Api.KeyIO.Windows.LowLevelHookSource
  --     KMonad.Api.KeyIO.Windows.SendEventSink
  --     KMonad.Api.KeyIO.Windows.Types
  --     Test
  other-modules:
      Paths_kmonad
  hs-source-dirs:
      src
  default-extensions:
      AutoDeriveTypeable
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DerivingStrategies
      DoAndIfThenElse
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      LambdaCase
      MonadFailDesugaring
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NoImplicitPrelude
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PolyKinds
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TemplateHaskell
      TupleSections
      TypeApplications
      TypeOperators
      TypeFamilies
      TypeSynonymInstances
      ViewPatterns
  if os(linux)
    c-sources:
      c_src/keyio.c
  if os(windows)
    c-sources:
      c_src/keyio_win.c
  build-depends:
    --   async
    -- , base
    -- , bytestring
    -- , cereal
    -- , containers
    -- , exceptions
    -- , hashable
    -- , lens
    -- , megaparsec
    -- , monad-logger
    -- , mtl
    -- , network
    -- , optparse-applicative
    -- , process
    -- , text
    -- , time
    -- , unagi-chan
    -- , unliftio
    -- , unordered-containers
      base
    , cereal
    , lens
    , network
    , resourcet
    , rio
    , time
    , unagi-chan
    , unliftio
  if os(linux)
     build-depends: unix
  if os(windows)
     build-depends: Win32

  default-language: Haskell2010

-- executable kmonad
--   main-is: Main.hs
--   other-modules:
--       Paths_kmonad
--   hs-source-dirs:
--       app
--   ghc-options:
--       -threaded
--       -rtsopts
--       -with-rtsopts=-N
--   build-depends:
--       base
--     , kmonad
--   default-language: Haskell2010
