cabal-version: 1.12

name:           kmonad
version:        0.2.0
synopsis:       Advanced keyboard remapping utility
author:         David Janssen
maintainer:     janssen.dhj@gmail.com
license:        MIT
license-file:   LICENSE
build-type:     Simple

library
  exposed-modules:
      KMonad
      KMonad.Api.App
      KMonad.Api.Args
      KMonad.Api.Encode
      KMonad.Api.EventTracker
      KMonad.Api.KeyIO
      KMonad.Api.KeyIO.Types
      KMonad.Api.LayerStack
      KMonad.Api.LockManager
      KMonad.Api.Sluice
      KMonad.Api.SymbolEncoder
      KMonad.Core
      KMonad.Core.Button
      KMonad.Core.Config
      KMonad.Core.Event
      KMonad.Core.Keyboard
      KMonad.Core.KeyCode
      KMonad.Core.MapStack
      KMonad.Core.Matrix
      KMonad.Core.Parser
      KMonad.Core.Parser.Parsers.Alias
      KMonad.Core.Parser.Parsers.Button
      KMonad.Core.Parser.Parsers.Config
      KMonad.Core.Parser.Parsers.IO
      KMonad.Core.Parser.Parsers.KeyCode
      KMonad.Core.Parser.Parsers.KeySequence
      KMonad.Core.Parser.Parsers.Layer
      KMonad.Core.Parser.Parsers.Matrix
      KMonad.Core.Parser.Parsers.Source
      KMonad.Core.Parser.Parsers.SpecialSymbol
      KMonad.Core.Parser.Token
      KMonad.Core.Parser.Utility
      KMonad.Core.Pretty
      KMonad.Core.SpecialSymbol
      KMonad.Core.Time
      KMonad.Core.Types
      KMonad.Domain.Button
      KMonad.Domain.Button.After
      KMonad.Domain.Button.Around
      KMonad.Domain.Button.Block
      KMonad.Domain.Button.Emit
      KMonad.Domain.Button.EmitDeadKey
      KMonad.Domain.Button.EmitSpecial
      KMonad.Domain.Button.LayerAdd
      KMonad.Domain.Button.LayerRem
      KMonad.Domain.Button.LayerToggle
      KMonad.Domain.Button.Lockers
      KMonad.Domain.Button.Macro
      KMonad.Domain.Button.MultiTap
      KMonad.Domain.Button.TapHold
      KMonad.Domain.Button.TapNext
      KMonad.Domain.Effect
      KMonad.Domain.Loop
  if os(linux)
    exposed-modules:
      KMonad.Api.KeyIO.Linux.DeviceSource
      KMonad.Api.KeyIO.Linux.Types
      KMonad.Api.KeyIO.Linux.UinputSink
  if os(windows)
    exposed-modules:
      KMonad.Api.KeyIO.Windows.LowLevelHookSource
      KMonad.Api.KeyIO.Windows.SendEventSink
      KMonad.Api.KeyIO.Windows.Types
      Test
  other-modules:
      Paths_kmonad
  hs-source-dirs:
      src
  default-extensions:
      AutoDeriveTypeable
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DerivingStrategies
      DoAndIfThenElse
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      LambdaCase
      MonadFailDesugaring
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PolyKinds
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TemplateHaskell
      TupleSections
      TypeApplications
      TypeOperators
      TypeFamilies
      TypeSynonymInstances
      ViewPatterns
  if os(linux)
    c-sources:
      c_src/keyio.c
  if os(windows)
    c-sources:
      c_src/keyio_win.c
  build-depends:
      base
    , bytestring
    , cereal
    , containers
    , exceptions
    , hashable
    , lens
    , megaparsec
    , monad-logger
    , mtl
    , optparse-applicative
    , process
    , text
    , time
    , unagi-chan
    , unliftio
    , unordered-containers
  if os(linux)
     build-depends: unix
  if os(windows)
     build-depends: Win32

  default-language: Haskell2010

executable kmonad
  main-is: Main.hs
  other-modules:
      Paths_kmonad
  hs-source-dirs:
      app
  ghc-options:
      -threaded
      -rtsopts
      -with-rtsopts=-N
  build-depends:
      base
    , kmonad
  default-language: Haskell2010
